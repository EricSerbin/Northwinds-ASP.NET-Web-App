@model IEnumerable<WebApplication1.Data.Models.ProductExt>
@*@model IEnumerable<WebApplication1.Data.Model.ModelDB.Product>*@


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";


}
<link href="//cdn.datatables.net/2.1.8/css/dataTables.dataTables.min.css" rel="stylesheet" />

<style>
    .slider {
        background-color: #f9f9f9;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
    }

        .slider table {
            width: 100%;
        }

        .slider td {
            padding: 5px;
        }

    .details-control {
        cursor: pointer;
    }
</style>
<table id="mytable" class="table collapse-horizontal table-striped">
    <thead>
        <tr>
            <th></th>
            <th></th>
            <th>@Html.DisplayNameFor(model => model.ProductName)</th>

            <th>@Html.DisplayNameFor(model => model.ProductID)</th>

            <th>@Html.DisplayNameFor(model => model.Discontinued)</th>

            <th>@Html.DisplayNameFor(model => model.UnitPrice)</th>

            <th>@Html.DisplayNameFor(model => model.QuantityPerUnit)</th>

            <th>@Html.DisplayNameFor(model => model.UnitsInStock)</th>

            <th>@Html.DisplayNameFor(model => model.UnitsOnOrder)</th>

            <th>@Html.DisplayNameFor(model => model.Category)</th>

            <th>CompanyName</th>



            <th>@Html.DisplayNameFor(model => model.Category.Picture)</th>
            @*<th class="details-control">@Html.DisplayNameFor(model => model.Category)</th>*@
            @* <th>@Html.DisplayNameFor(model => model.Category.Picture)</th>*@


        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            //base64picture ignore
            //var base64Picture = item.Category?.Picture != null ? Convert.ToBase64String(item.Category.Picture) : null;

            @*<tr data-categoryname="@(item.Category?.CategoryName)" data-categorydescription="@(item.Category?.Description)"
                data-categoryid="@(item.Category?.CategoryID)" data-categorypicture="@WebApplication1.Controllers.HtmlExtensions.BufferImageOffset(item.Category?.Picture)">*@

            <tr data-categoryname="@(item?.CategoryName)" data-categorydescription="@(item?.Description)"
                data-categoryid="@(item?.CategoryID)" data-categorypicture="@WebApplication1.Controllers.HtmlExtensions.BufferImageOffset(item?.Picture)">


                <td>
                    <a href="@Url.Action("Edit", "SupplierProducts", new { id = item.ProductID })" class="btn btn-success">Edit</a>
                </td>
                @*@Html.ActionLink("Edit", "Edit", new { id = item.ProductID }, new { @class = "btn btn-success" })*@

                <td class="details-control">+</td>
                <td>@(item?.ProductName) </td>

                <td>@(item?.ProductID)</td>

                <td>@(item?.Discontinued) </td>

                <td>@(item?.UnitPrice) </td>

                <td>@(item?.QuantityPerUnit) </td>

                <td>@(item?.UnitsInStock) </td>

                <td>@(item?.UnitsOnOrder) </td>

                <td>@(item?.CategoryName)</td>

                <td>@(item?.CompanyName)</td>
                <td>Consider putting photos here</td>

                @*<img src="@WebApplication1.Controllers.HtmlExtensions.BufferImageOffset(item.Category.Picture)" alt="Pictures is Unavailable" />
                    This displays every image in order at the top of the page, good for unit testing *@
                @*DisplayFor seems to override the requirement for display templates?*@
            </tr>

        }

    </tbody>

</table>
<div>
    <canvas id='myChart'></canvas>
</div>
<div>
    <canvas id='secondaryChart'></canvas>
    <canvis id='ternaryChart'></canvis>
</div>

@section  scripts{
    <script src="//cdn.datatables.net/2.1.8/js/dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function () {

            //Datatable
            var table = $('#mytable').DataTable({
                'columnDefs': [{ 'orderable': false, 'targets': [0] }, { className: 'details-control', targets: [1] }],
                'aaSorting': [[1, 'asc']],
                //'columns.footer': 'All products belong to one supplier'
                //'class':'details-control', , 0-7 for targets
            });

            //Drop down childrow html

            function format(name, description, id, picture) {

                /*'padding - right: 30px;'*/
                return '<div class="slider">' +
                    '<table cellpadding="5" cellspacing="0"  border="0" style="padding-left:50px;">' +
                    '<tr>' +
                    '<td>Category Name:</td>' +
                    '<td>' + name + '</td>' +
                    '</tr>' +
                    '<tr>' +
                    '<td>Category Description:</td>' +
                    '<td>' + description + '</td>' +
                    '</tr>' +
                    '<td>Category ID:</td>' +
                    '<td>' + id + '</td>' +
                    '</tr>' +
                    '<tr>' +

                    '<td>Category Picture:</td>' +
                    '<td>' + "<img src = " + picture + " alt='Image unavailable' style ='border-radius: 15%'  />" + '</td>' +

                    '</tr>' +
                    '</table>' +
                    '</div>';

            }
            
            //Drop down childrow javascript
            $('#mytable tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr'); //gets closest to cursor
                var row = table.row(tr);

                if (row.child.isShown()) {
                    $('div.slider', row.child()).slideUp(function () {
                        row.child.hide();
                        tr.removeClass('shown');
                    });
                }
                else {

                    var TrHolder = tr.data('categorypicture');
                    row.child(format(tr.data('categoryname'), tr.data('categorydescription'), tr.data('categoryid'), TrHolder), 'no-padding').show();
                    //row.child(format(tr.data('categoryname'), tr.data('categorydescription'), tr.data('categoryid'), tr.data('categorypicture')), 'no-padding').show();
                    //row.child(format(row.data()), 'no-padding').show(); //good for debugging

                    tr.addClass('shown');
                    $('div.slider', row.child()).slideDown();
                }
            });


        //const ctx = document.getElementById('myChart');
        //First Chart
        $.ajax({

            url: '@Url.Action("GetProductsJson", "SupplierProducts")',
            method: 'GET',
            success: function (data) {

                //"[{\"CompanyName\":\"Exotic Liquids\",\"CategoryName\":\"Beverages\",\"CategoryID\":\"1\",\"Description\":\"Soft drinks, coffees, teas, beers, and ales\",\"Picture\":null,\"ProductID\":1,\"ProductName\":\"Chai\",\"SupplierID\":1,\"QuantityPerUnit\":\"10 boxes x 20 bags\",\"UnitPrice\":18.0000,\"UnitsInStock\":39,\"UnitsOnOrder\":0,\"ReorderLevel\":10,\"Discontinued\":false,\"Category\":null,\"Order_Details\":[],\"Supplier\":null},{\"CompanyName\":\"Exotic Liquids\",\"CategoryName\":\"Beverages\",\"CategoryID\":\"1\",\"Description\":\"Soft drinks, coffees, teas, beers, and ales\",\"Picture\":null,\"ProductID\":2,\"ProductName\":\"Chang\",\"SupplierID\":1,\"QuantityPerUnit\":\"24 - 12 oz bottles\",\"UnitPrice\":19.0000,\"UnitsInStock\":17,\"UnitsOnOrder\":40,\"ReorderLevel\":25,\"Discontinued\":false,\"Category\":null,\"Order_Details\":[],\"Supplier\":null},{\"CompanyName\":\"Exotic Liquids\",\"CategoryName\":\"Condiments\",\"CategoryID\":\"2\",\"Description\":\"Sweet and savory sauces, relishes, spreads, and seasonings\",\"Picture\":null,\"ProductID\":3,\"ProductName\":\"Aniseed Syrup\",\"SupplierID\":1,\"QuantityPerUnit\":\"12 -..."
                parsedData = JSON.parse(data);

                var dataParsedProductNames = parsedData.map(function(item){return item.ProductName;});
                var dataParsedPrices = parsedData.map(function(item){return item.UnitPrice;});
                var dataParsedUnitsOnOrder = parsedData.map(function(item){return item.UnitsOnOrder;});
                var dataParsedUnitsInStock = parsedData.map(function(item){return item.UnitsInStock;});
                var dataParsedQuantityPerUnit = parsedData.map(function(item){return item.QuantityPerUnit;});

                var ctx = document.getElementById('myChart');

                var myChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: dataParsedProductNames,
                        //labels: ['red', 'blue', 'yellow'],

                        datasets: [{
                            label: 'Units on Order',
                            data: dataParsedUnitsOnOrder,
                            parsing: {
                                yAxisKey: 'UnitsOnOrder'
                            }
                        },
                        {
                            label: 'Unit Price',
                            data: dataParsedPrices,
                            parsing: {
                                yAxisKey: 'UnitPrice'
                            }
                        },
                        {
                            label: 'Units in Stock',
                            data: dataParsedUnitsInStock,
                            parsing: {
                                yAxisKey: 'UnitsInStock'
                            }
                        },
                        {
                            label: 'Quantity per Unit',
                            data: dataParsedUnitsInStock,
                            parsing: {
                                yAxisKey: 'UnitsInStock'
                            }
                        }]

                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            },
            error: function(error) {
                alert("error result is " + error);

            }

        });

        //Second Chart
        $.ajax({

            url: '@Url.Action("GetProductsJson", "SupplierProducts")',
            method: 'GET',
            success: function (data) {

                //"[{\"CompanyName\":\"Exotic Liquids\",\"CategoryName\":\"Beverages\",\"CategoryID\":\"1\",\"Description\":\"Soft drinks, coffees, teas, beers, and ales\",\"Picture\":null,\"ProductID\":1,\"ProductName\":\"Chai\",\"SupplierID\":1,\"QuantityPerUnit\":\"10 boxes x 20 bags\",\"UnitPrice\":18.0000,\"UnitsInStock\":39,\"UnitsOnOrder\":0,\"ReorderLevel\":10,\"Discontinued\":false,\"Category\":null,\"Order_Details\":[],\"Supplier\":null},{\"CompanyName\":\"Exotic Liquids\",\"CategoryName\":\"Beverages\",\"CategoryID\":\"1\",\"Description\":\"Soft drinks, coffees, teas, beers, and ales\",\"Picture\":null,\"ProductID\":2,\"ProductName\":\"Chang\",\"SupplierID\":1,\"QuantityPerUnit\":\"24 - 12 oz bottles\",\"UnitPrice\":19.0000,\"UnitsInStock\":17,\"UnitsOnOrder\":40,\"ReorderLevel\":25,\"Discontinued\":false,\"Category\":null,\"Order_Details\":[],\"Supplier\":null},{\"CompanyName\":\"Exotic Liquids\",\"CategoryName\":\"Condiments\",\"CategoryID\":\"2\",\"Description\":\"Sweet and savory sauces, relishes, spreads, and seasonings\",\"Picture\":null,\"ProductID\":3,\"ProductName\":\"Aniseed Syrup\",\"SupplierID\":1,\"QuantityPerUnit\":\"12 -..."
                parsedData = JSON.parse(data);

                var dataParsedProductNames = parsedData.map(function(item){return item.ProductName;});
                var dataParsedPrices = parsedData.map(function(item){return item.UnitPrice;});
                var dataParsedUnitsOnOrder = parsedData.map(function(item){return item.UnitsOnOrder;});
                var dataParsedUnitsInStock = parsedData.map(function(item){return item.UnitsInStock;});
                var dataParsedQuantityPerUnit = parsedData.map(function(item){return item.QuantityPerUnit;});

                var ctx = document.getElementById('secondaryChart');

                var myChart = new Chart(ctx, {
                    type: 'radar',
                    data: {
                        labels: dataParsedProductNames,
                        //labels: ['red', 'blue', 'yellow'],

                        datasets: [{
                            label: 'Units on Order',
                            data: dataParsedUnitsOnOrder,
                            parsing: {
                                yAxisKey: 'UnitsOnOrder'
                            }
                        },
                        {
                            label: 'Unit Price',
                            data: dataParsedPrices,
                            parsing: {
                                yAxisKey: 'UnitPrice'
                            }
                        },
                        {
                            label: 'Units in Stock',
                            data: dataParsedUnitsInStock,
                            parsing: {
                                yAxisKey: 'UnitsInStock'
                            }
                        },
                        {
                            label: 'Quantity per Unit',
                            data: dataParsedUnitsInStock,
                            parsing: {
                                yAxisKey: 'UnitsInStock'
                            }
                        }]

                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            },
            error: function(error) {
                alert("error result is " + error);

            }

        });

    });

    </script>
}

