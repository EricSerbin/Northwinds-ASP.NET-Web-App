@model WebApplication1.Data.Model.ModelDB.Customer

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm()) //mvc version of forms  could have posts, gets, all kinds of things done within html.beginForm("",)
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control .form-group.required", @required="" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactName, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactName, new { htmlAttributes = new { @class = "form-control .form-group.required", @required = "" } })
                @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Region, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Region, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" /> @*there's always going to be one post in a form, if you group multiple things like an email and a name they'd be wrapped in one form*@
                <div id="btnNameOnly" class="btn btn-info">Update Name Only</div>
                <div id="btnNameOnlyNoID" class="btn btn-warning">Update Name Only Via ID</div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">


            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>

    $(function () {

        $('#btnNameOnly').on("click", function () {
            console.log($("#ContactName").val())
            console.log($("#ContactTitle").val())
            console.log($("#ID").val())
            
            /*alert($("#ID").val())// find how to access ID*/
            var x = $(".form-group");
            console.log(x);

            $.ajax({
                url: "/customer/savenameonly",
                type: "GET",
                data: {
                    name: $("#ContactName").val(),
                    title: $("#ContactTitle").val(),
                    id: $("#ID").val(),
                },
                dataType: "json",
                success: function (result) {
                    if (result == true) {
                        window.location.href = "@Url.Content( "~/customer")";
                    }
                    else {
                        alert("result is false");
                    }
                },

                error: function (xhr, status, error) {
                    alert("error");
                }
            });

            function doSomething() {
                var x = $(".form-group");
                $.each(x, function (i, v) {
                    console.log(i);
                    console.log(v);

                }); 
            };
        });
    });
    $(function () {
        $('#btnNameOnlyNoID').on("click", function () {
            console.log($("#ContactName").val())
            console.log($("#ContactTitle").val())
            console.log($("CompanyName").val())

            var x = $(".form-group");
            console.log(x);

            $.ajax({
                url: "/customer/savenameonlyvianametitle",
                type: "GET",
                data: {
                    name: $("#ContactName").val(),
                    title: $("#ContactTitle").val(),
                    companyName: $("#CompanyName").val(),
                },
                dataType: "json",
                success: function (result) {
                    if (result == true) {
                        window.location.href = "@Url.Content( "~/customer")";
                    }
                    else {
                        alert("result is false");
                    }
                },

                error: function (xhr, status, error) {
                    alert("error");
                }
            });
        });
    });
</script>
}
